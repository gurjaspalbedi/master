# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import master_pb2 as master__pb2


class MasterStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ping_master = channel.unary_unary(
        '/Master/ping_master',
        request_serializer=master__pb2.ping_request.SerializeToString,
        response_deserializer=master__pb2.ping_response.FromString,
        )
    self.run_map_reduce = channel.unary_unary(
        '/Master/run_map_reduce',
        request_serializer=master__pb2.request.SerializeToString,
        response_deserializer=master__pb2.final_response.FromString,
        )


class MasterServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ping_master(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def run_map_reduce(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MasterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ping_master': grpc.unary_unary_rpc_method_handler(
          servicer.ping_master,
          request_deserializer=master__pb2.ping_request.FromString,
          response_serializer=master__pb2.ping_response.SerializeToString,
      ),
      'run_map_reduce': grpc.unary_unary_rpc_method_handler(
          servicer.run_map_reduce,
          request_deserializer=master__pb2.request.FromString,
          response_serializer=master__pb2.final_response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Master', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
